// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeaShopApi.DataAccessLayer.Context;

#nullable disable

namespace TeaShopApi.DataAccessLayer.Migrations
{
    [DbContext(typeof(TeaContext))]
    [Migration("20231119150925_mig_first")]
    partial class mig_first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TeaShopApi.EntityLayer.Concrete.Contact", b =>
                {
                    b.Property<int>("contactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("contactID"), 1L, 1);

                    b.Property<string>("messageDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("messageMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("messageSendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("messageSenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("messageSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contactID");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("TeaShopApi.EntityLayer.Concrete.Drink", b =>
                {
                    b.Property<int>("drinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("drinkID"), 1L, 1);

                    b.Property<string>("drinkImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("drinkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("drinkPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("drinkID");

                    b.ToTable("drinks");
                });

            modelBuilder.Entity("TeaShopApi.EntityLayer.Concrete.Question", b =>
                {
                    b.Property<int>("questionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("questionID"), 1L, 1);

                    b.Property<string>("answerDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("questionDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("questionID");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("TeaShopApi.EntityLayer.Concrete.Testimonial", b =>
                {
                    b.Property<int>("testimonialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("testimonialID"), 1L, 1);

                    b.Property<string>("testimonilComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("testimonilImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("testimonilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("testimonialID");

                    b.ToTable("testimonials");
                });
#pragma warning restore 612, 618
        }
    }
}
